#
# MAKEFILE for Borland's make
#
# built with:
#  * MS-DOS fully compatible environment (DOSBox will help you...)
#  * Borland C++ 2.0 or later (up to 5.0x)
#  * tasm (guess 2.5 or later. tasmx will be needed for building on DOS)
#
# to build on DOS environment:
#       make -fmakefile.bor
#
# to build with *.lst and *.map:
#       make -fmakefile.bor LIST=1
#
# on Windows NT~11 (x86/x64) with Borland C++ 4.x/5.0x:
#       make -f makefile.bor -DWIN32
#

D=\\

CP=copy
#RM_F=rm -f
RM_F=del

!if $d(WIN32)
AS=tasm32
CC=bcc32 -tWC
!else
AS=tasm
AS=tasmx
#CC=bcc
#CC=tcc
!endif

!if $(LIST)
AFLAGS_LST=/l
LDFLAGS_MAP=/m
!endif

AFLAGS=/Ml /jMASM /jQUIRKS /jJUMPS /jSMART /m9 $(AFLAGS_LST)

HIGHLINKEXE=tlink /x /c /n /i $(LDFLAGS_MAP) $*,$@;
LINKEXE=tlink /x /c /n $(LDFLAGS_MAP) $*,$@;
EXEHIGH=exehigh.exe
HIGHTOUCH= ./$(EXEHIGH) $@

# (do not build redundant deldev_e.exe)
all : adddev.exe english$(D)adddev.exe deldev.exe

adddev.exe : adddev.obj $(EXEHIGH)
	$(HIGHLINKEXE)
	$(HIGHTOUCH)

english$(D)adddev.exe : adddev_e.exe
	-mkdir english
	$(CP) adddev_e.exe $<

adddev_e.exe : adddev_e.obj $(EXEHIGH)
	$(HIGHLINKEXE)
	$(HIGHTOUCH)

deldev.exe : deldev.obj
	$(LINKEXE)

deldev_e.exe : deldev_e.obj
	$(LINKEXE)

$(EXEHIGH): exehigh.c
	$(CC) -e$@ $*.c

adddev.obj : adddev.asm adddel.inc
	$(AS) $(AFLAGS) adddev,$<;

adddev_e.obj : adddev.asm adddel.inc
	$(AS) $(AFLAGS) /DENGLISH=1 adddev,$<;

deldev.obj : deldev.asm adddel.inc
	$(AS) $(AFLAGS) deldev,$<;

deldev_e.obj : deldev.asm adddel.inc
	$(AS) $(AFLAGS) /DENGLISH=1 deldev,$<;

clean :
	-$(RM_F) *.obj $(EXEHIGH) *.lst *.map
	-$(RM_F) adddev.exe adddev_e.exe
	-$(RM_F) deldev.exe
	-$(RM_F) english$(D)adddev.exe

